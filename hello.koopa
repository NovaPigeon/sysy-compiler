decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()
fun @exgcd(@a_0: i32, @b_0: i32, @x_0: *i32, @y_0: *i32): i32 {
%_entry_exgcd:
  %a_0 = alloc i32
  store @a_0, %a_0
  %b_0 = alloc i32
  store @b_0, %b_0
  %x_0 = alloc *i32
  store @x_0, %x_0
  %y_0 = alloc *i32
  store @y_0, %y_0
  %0 = load %b_0
  %1 = eq %0, 0
  br %1, %_then_0, %_else_0

%_then_0:
  %2 = load %x_0
  %3 = getptr %2, 0
  store 1, %3
  %4 = load %y_0
  %5 = getptr %4, 0
  store 0, %5
  %6 = load %a_0
  ret %6

%_else_0:
  @r_0_1 = alloc i32
  %7 = load %b_0
  %8 = load %a_0
  %9 = load %b_0
  %10 = mod %8, %9
  %11 = load %x_0
  %12 = load %y_0
  %13 = call @exgcd(%7, %10, %11, %12)
  store %13, @r_0_1
  @t_0_1 = alloc i32
  %14 = load %x_0
  %15 = getptr %14, 0
  %16 = load %15
  store %16, @t_0_1
  %17 = load %y_0
  %18 = getptr %17, 0
  %19 = load %18
  %20 = load %x_0
  %21 = getptr %20, 0
  store %19, %21
  %22 = load @t_0_1
  %23 = load %a_0
  %24 = load %b_0
  %25 = div %23, %24
  %26 = load %y_0
  %27 = getptr %26, 0
  %28 = load %27
  %29 = mul %25, %28
  %30 = sub %22, %29
  %31 = load %y_0
  %32 = getptr %31, 0
  store %30, %32
  %33 = load @r_0_1
  ret %33

}
fun @main(): i32 {
%_entry_main:
  @a_1 = alloc i32
  store 7, @a_1
  @b_1 = alloc i32
  store 15, @b_1
  @x_1 = alloc [i32, 1]
  store {1}, @x_1
  @y_1 = alloc [i32, 1]
  store {1}, @y_1
  %0 = load @a_1
  %1 = load @b_1
  %2 = getelemptr @x_1, 0
  %3 = getelemptr @y_1, 0
  %4 = call @exgcd(%0, %1, %2, %3)
  %5 = getelemptr @x_1, 0
  %6 = load %5
  %7 = load @b_1
  %8 = mod %6, %7
  %9 = load @b_1
  %10 = add %8, %9
  %11 = load @b_1
  %12 = mod %10, %11
  %13 = getelemptr @x_1, 0
  store %12, %13
  %14 = getelemptr @x_1, 0
  %15 = load %14
  call @putint(%15)
  ret 0
}
