fun @main(): i32 {
%entry:
  @a = alloc i32
  store 0, @a
  @c = alloc i32
  store 1, @c
  @d = alloc i32
  store 2, @d
  %0 = load @a
  %1 = ne %0, 0
  %2 = ne 0, 0
  %3 = or %1, %2
  br %3, %then_0, %else_0

%then_0:
  store 3, @c
  jump %end_0

%else_0:
  store 3, @d
  @a_1 = alloc i32
  store 1, @a_1
  %4 = load @a_1
  %5 = ne %4, 0
  %6 = ne 0, 0
  %7 = or %5, %6
  br %7, %then_1, %else_1

%then_1:
  store 4, @c
  jump %end_1

%else_1:
  store 4, @d
  jump %end_1

%end_1:
  %8 = load @a_1
  %9 = eq %8, 0
  br %9, %then_2, %else_2

%then_2:
  ret 1

%else_2:
  %10 = load @a_1
  %11 = eq %10, 0
  %12 = load @a_1
  %13 = eq %12, -1
  %14 = ne %11, 0
  %15 = ne %13, 0
  %16 = and %14, %15
  br %16, %then_3, %end_3

%then_3:
  ret 2

%end_3:
  jump %end_2

%end_2:
  jump %end_0

%end_0:
  %17 = load @a
  %18 = add %17, 0
  %19 = load @c
  %20 = add %18, %19
  %21 = load @d
  %22 = add %20, %21
  ret %22
}
